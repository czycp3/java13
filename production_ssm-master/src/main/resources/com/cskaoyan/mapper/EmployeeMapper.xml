<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cskaoyan.mapper.EmployeeMapper">
<resultMap id="baseMap" type="employee">
    <result property="birthday" column="birthday"/>
    <result property="degree" column="degree"/>
    <result property="education" column="education"/>
    <result property="educationForm" column="education_form"/>
    <result property="empId" column="emp_id"/>
    <result property="empName" column="emp_name"/>
    <result property="graduateSchool" column="graduate_school"/>
    <result property="idCode" column="id_code"/>
    <result property="joinDate" column="join_date"/>
    <result property="major" column="major"/>
    <result property="sex" column="sex"/>
    <result property="status" column="status"/>
    <association property="department" javaType="department">
        <result property="departmentId" column="department_id"/>
        <result property="departmentName" column="department_name"/>
        <result property="note" column="note"/>
    </association>
</resultMap>
    <select id="getEmployees" resultMap="baseMap">
        select birthday,degree,education,education_form,emp_id,emp_name,graduate_school,id_code,join_date,major,sex,status,department.department_id
        from employee left join department on employee.department_id=department.department_id
    </select>
    <select id="selectEmployeeById" resultMap="baseMap">
        select birthday,degree,education,education_form,emp_id,emp_name,graduate_school,id_code,join_date,major,sex,status,department.department_id
        from employee left join department on employee.department_id=department.department_id
        where employee.emp_id=#{deviceKeeperId}
    </select>
    <select id="findAllEmployees" resultMap="baseMap">
        SELECT d.emp_id,d.emp_name,d.sex,d.id_code,d.birthday,d.join_date,d.status,d.education,
        d.degree,d.major,d.graduate_school,d.education_form,d.department_id,u.department_id AS departmentId,u.department_Name,u.note FROM
        employee d LEFT JOIN department u
        ON d.department_id = u.department_id
        limit #{offset} , #{rows}
    </select>

    <!--查询用户总数-->
    <select id="findEmployeeTotal" resultType="int">
        select count(*) from employee
    </select>

    <!--获取departmentData-->
    <select id="getDepartmentData" resultType="com.cskaoyan.bean.Department">
        select department_id as departmentId,department_name as departmentName,
        note from department where department_id = #{id}
    </select>

    <!--编辑员工-->
    <update id="employeeUpdateAll" parameterType="com.cskaoyan.bean.Employee">
        update employee set birthday = #{birthday},degree = #{degree},education = #{education},
        education_form = #{educationForm},
        emp_name = #{empName},graduate_school = #{graduateSchool} ,department_id = #{departmentId},
        id_code = #{idCode},join_date = #{joinDate},
        major = #{major},sex = #{sex},status = #{status} where emp_id = #{empId}
    </update>

    <!--新增员工-->
    <insert id="insertEmployee" parameterType="com.cskaoyan.bean.Employee">
        insert into employee (birthday,degree,education,education_form,emp_id,
        emp_name,graduate_school,id_code,join_date,major,sex,status,
        department_id) values (#{birthday},#{degree},#{education},#{educationForm},
        #{empId},#{empName},#{graduateSchool},#{idCode},#{joinDate},#{major},
        #{sex},#{status},#{departmentId})
    </insert>

    <!--删除员工-->
    <delete id="employeeDeleteBatch" parameterType="String">
        delete from employee where emp_id = #{id}
    </delete>

</mapper>