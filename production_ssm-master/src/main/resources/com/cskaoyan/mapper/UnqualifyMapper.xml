<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cskaoyan.mapper.UnqualifyMapper">
    <!--其他数据表都建好之后在查询产品名称和申请人-->
    <resultMap id="findUnqualifyByPages" type="com.cskaoyan.bean.Unqualify">
        <id column="unqualify_apply_id" property="unqualifyApplyId" />
        <result column="product_id" property="productId" />
        <result column="unqualify_item" property="unqualifyItem" />
        <result column="unqualify_count" property="unqualifyCount" />
        <result column="assembly_date" property="assemblyDate" />
        <result column="emp_id" property="empId" />
        <result column="apply_date" property="applyDate" />
        <result column="note" property="note" />
        <result column="product_name" property="productName" />
        <result column="emp_name" property="empName" />
    </resultMap>

    <sql id="Base_Column_List">
        unqualify_apply_id,product_id,unqualify_item,unqualify_count,assembly_date,emp_id,apply_date,note
    </sql>


    <!--mapper中的数据库表名均为许辛鹏的数据库表名，最后在全部整合-->
    <!--分页查找-->
    <select id="findList" resultMap="findUnqualifyByPages" >
        select  un.unqualify_apply_id,
 				un.product_id,
 				un.unqualify_item,
 				un.unqualify_count,
 				un.assembly_date,
 				un.emp_id,
 				un.apply_date,
 				un.note,
 				p.product_name,
 				e.emp_name

 				from unqualify_apply un
 				left join product p on un.product_id = p.product_id
 				left join employee e on un.emp_id = e.emp_id
                limit #{offset} , #{rows}
    </select>

    <!--查找所有信息-->
    <select id="findAllList" resultMap="findUnqualifyByPages" >
        select unqualify_apply_id from unqualify_apply
    </select>



    <!--插入新的不良品信息-->
    <insert id="insert" >
        insert into unqualify_apply (<include refid="Base_Column_List" />) value (#{unqualify.unqualifyApplyId},
        #{unqualify.productId},#{unqualify.unqualifyItem},#{unqualify.unqualifyCount},
        #{unqualify.assemblyDate},#{unqualify.empId},#{unqualify.applyDate},
        #{unqualify.note})
    </insert>

    <!--修改不良信息-->
    <update id="update_all">
        update unqualify_apply set product_id = #{unqualify.productId},
                                   unqualify_item = #{unqualify.unqualifyItem},
                                   unqualify_count = #{unqualify.unqualifyCount},
                                   assembly_date = #{unqualify.assemblyDate},
                                   emp_id = #{unqualify.empId},
                                   apply_date = #{unqualify.applyDate},
                                   note = #{unqualify.note}

                                    where unqualify_apply_id = #{unqualify.unqualifyApplyId}
    </update>

    <!--修改不良备注信息-->
    <update id="update_note">
         update unqualify_apply set note = #{note} where unqualify_apply_id = #{unqualifyApplyId}
    </update>


    <!-- 删除不良品信息 -->
    <delete id="delete_batch">
        delete from unqualify_apply where unqualify_apply_id = #{id}
    </delete>

    <!-- 根据id分页查询 -->
    <select id="searchUnqualifyByUnqualifyId" resultMap="findUnqualifyByPages" >
        select  un.unqualify_apply_id,
 				un.product_id,
 				un.unqualify_item,
 				un.unqualify_count,
 				un.assembly_date,
 				un.emp_id,
 				un.apply_date,
 				un.note,
 				p.product_name,
 				e.emp_name

 				from unqualify_apply un
 				left join product p on un.product_id = p.product_id
 				left join employee e on un.emp_id = e.emp_id
 				where unqualify_apply_id LIKE '%${searchValue}%'
                limit #{offset} , #{rows}
    </select>

    <!--根据id查询所有信息-->
    <select id="searchAllUnqualifyByUnqualifyId" resultMap="findUnqualifyByPages" >
        select unqualify_apply_id from unqualify_apply where unqualify_apply_id LIKE '%${searchValue}%'
    </select>

    <!--根据product的名字查询product的idfindProductId-->
    <resultMap id="findProductIdByName" type="com.cskaoyan.bean.Product">
        <result column="product_id" property="productId" />
        <result column="product_name" property="productName" />
    </resultMap>

    <select id="findProductId" resultMap="findProductIdByName">
        select product_id from product where product_name LIKE '%${searchValue}%'
    </select>

    <!--根据product_id查询总记录数-->
    <select id="searchAllUnqualifyByProductName" resultMap="findUnqualifyByPages" >
         select  un.unqualify_apply_id,
 				 un.product_id,
 				 un.unqualify_item,
 				 un.unqualify_count,
 				 un.assembly_date,
 				 un.emp_id,
 				 un.apply_date,
 				 un.note,
 				 p.product_name,
 				 e.emp_name

 				 from unqualify_apply un
 				 left join product p on un.product_id = p.product_id
 				 left join employee e on un.emp_id = e.emp_id
                 where un.product_id = #{productId}
    </select>


</mapper>